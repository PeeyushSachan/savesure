import 'package:flutter_local_notifications/flutter_local_notifications.dart';
// ‚úÖ Notification ‡§¶‡§ø‡§ñ‡§æ‡§®‡•á ‡§µ‡§æ‡§≤‡§æ Function

// Notifications plugin ‡§ï‡•Ä global instance
final FlutterLocalNotificationsPlugin flutterLocalNotificationsPlugin =
    FlutterLocalNotificationsPlugin();

// ‚úÖ Notification Initialization Function
Future<void> initializeNotifications() async {
  // Android ‡§ï‡•á ‡§≤‡§ø‡§è settings: ‡§Ø‡§π‡§æ‡§Å ‡§Ü‡§™‡§ï‡§æ app icon ‡§Ø‡•Ç‡§ú‡§º ‡§π‡•ã‡§§‡§æ ‡§π‡•à
  const AndroidInitializationSettings initializationSettingsAndroid =
      AndroidInitializationSettings('@mipmap/ic_launcher');

  // ‡§∏‡§≠‡•Ä ‡§™‡•ç‡§≤‡•á‡§ü‡§´‡•â‡§∞‡•ç‡§Æ ‡§ï‡•á ‡§≤‡§ø‡§è initialization settings
  const InitializationSettings initializationSettings = InitializationSettings(
    android: initializationSettingsAndroid,
  );

  // Plugin initialize ‡§ï‡§∞‡§®‡§æ
  await flutterLocalNotificationsPlugin.initialize(
    initializationSettings,

    // ‡§ú‡§¨ user notification ‡§™‡§∞ click ‡§ï‡§∞‡•á, ‡§§‡§¨ ‡§ï‡•ç‡§Ø‡§æ ‡§π‡•ã
    onDidReceiveNotificationResponse: (NotificationResponse response) {
      final payload = response.payload;
      if (payload != null) {
        print('Notification payload: $payload');
        // ‡§Ø‡§π‡§æ‡§Å ‡§Ü‡§™ navigation ‡§Ø‡§æ ‡§ï‡•ã‡§à action ‡§ï‡§∞ ‡§∏‡§ï‡§§‡•á ‡§π‡•ã
      }
    },
  );
}

Future<void> requestNotificationPermissionIfNeeded() async {
  final bool? granted = await flutterLocalNotificationsPlugin
      .resolvePlatformSpecificImplementation<
          AndroidFlutterLocalNotificationsPlugin>()
      ?.requestNotificationsPermission(); // ‚úÖ THIS is what you need

  if (granted != null && granted) {
    print("üîî Notification permission granted by user");
  } else {
    print("üö´ Notification permission denied by user");
  }
}

void showLocalNotification() async {
  const AndroidNotificationDetails androidDetails = AndroidNotificationDetails(
    'channel_id_1', // channel id (must be unique)
    'Basic Notifications', // channel name
    channelDescription: 'This channel is for basic notifications',
    importance: Importance.max,
    priority: Priority.high,
    playSound: true, // üîî sound enable
    enableVibration: true, // üí• vibration enable
    ticker: 'ticker', // optional but good
  );

  const NotificationDetails notificationDetails =
      NotificationDetails(android: androidDetails);

  await flutterLocalNotificationsPlugin.show(
    0, // notification ID
    'üì¢ SaveSure Notification', // title
    'Your notification is working correctly! ‚úÖ', // body text
    notificationDetails,
    payload: 'test_payload', // payload on tap
  );
}
